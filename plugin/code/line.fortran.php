<?php
/**
 * Fortran (60, 77, 90) キーワード定義ファイル
 */

$switchHash['\''] = PLUGIN_CODE_NONESCAPE_LITERAL;   // ' はエスケープしない文字列リテラル
$mkoutline = $option['outline'] = false; // アウトラインモード不可 
$capital = true;                        // 予約語の大文字小文字を区別しない

$switchHash['c'] = PLUGIN_CODE_CHAR_COMMENT;   // コメントは行頭の c/C から改行まで (f66)
$switchHash['C'] = PLUGIN_CODE_CHAR_COMMENT;
$switchHash['*'] = PLUGIN_CODE_HEAD_COMMENT;   // コメントは行頭の  * から改行まで (f77)
$switchHash['!'] = PLUGIN_CODE_HEAD_COMMENT;   // コメントは行頭の  ! から改行まで (f90)
/*
$code_comment = Array(
	"\n"=> Array(
		"/^\nc.*\n/",
		"/^\nC.*\n/",
		"/^\n*.*\n/",
		"/^\n!.*\n/",
	),
	'c' => Array(
		"/^c.*\n/",
	),
	'C' => Array(
		"/^C.*\n/",
	),
	'*' => Array(
		"/^\*.*\n/",
	),
	'!' => Array(
		"/^!.*\n/",
	),
);
*/
$code_css = Array(
  'operator',		// オペレータ関数
  'identifier',	// その他の識別子
  'pragma',		// module, import と pragma
  'system',		// 処理系組み込みの奴 __stdcall とか
);

$code_keyword = Array(
'abs' => 2,
'achar' => 2,
'acos' => 2,
'adjustl' => 2,
'adjustr' => 2,
'aimag' => 2,
'aint' => 2,
'align' => 2,
'all' => 2,
'all_prefix' => 2,
'all_scatter' => 2,
'all_suffix' => 2,
'allocatable' => 2,
'allocate' => 2,
'allocated' => 2,
'and' => 2,
'anint' => 2,
'any' => 2,
'any_prefix' => 2,
'any_scatter' => 2,
'any_suffix' => 2,
'asin' => 2,
'assign' => 2,
'assignment' => 2,
'associated' => 2,
'atan' => 2,
'atan2' => 2,
'backspace' => 2,
'bit_size' => 2,
'block' => 2,
'btest' => 2,
'call' => 2,
'case' => 2,
'ceiling' => 2,
'char' => 2,
'character' => 2,
'close' => 2,
'cmplx' => 2,
'common' => 2,
'complex' => 2,
'conjg' => 2,
'contains' => 2,
'continue' => 2,
'copy_prefix' => 2,
'copy_scatter' => 2,
'copy_suffix' => 2,
'cos' => 2,
'cosh' => 2,
'count' => 2,
'count_prefix' => 2,
'count_scatter' => 2,
'count_suffix' => 2,
'cshift' => 2,
'cycle' => 2,
'cyclic' => 2,
'data' => 2,
'date_and_time' => 2,
'dble' => 2,
'deallocate' => 2,
'digits' => 2,
'dim' => 2,
'dimension' => 2,
'distribute' => 2,
'do' => 2,
'dot_product' => 2,
'double' => 2,
'dprod' => 2,
'dynamic' => 2,
'else' => 2,
'elseif' => 2,
'elsewhere' => 2,
'end' => 2,
'enddo' => 2,
'endfile' => 2,
'endif' => 2,
'entry' => 2,
'eoshift' => 2,
'epsilon' => 2,
'eq' => 2,
'equivalence' => 2,
'eqv' => 2,
'exit' => 2,
'exp' => 2,
'exponent' => 2,
'external' => 2,
'extrinsic' => 2,
'false' => 2,
'floor' => 2,
'forall' => 2,
'format' => 2,
'fraction' => 2,
'function' => 2,
'ge' => 2,
'goto' => 2,
'grade_down' => 2,
'grade_up' => 2,
'gt' => 2,
'hpf_alignment' => 2,
'hpf_distribution' => 2,
'hpf_template' => 2,
'huge' => 2,
'iachar' => 2,
'iall' => 2,
'iall_prefix' => 2,
'iall_scatter' => 2,
'iall_suffix' => 2,
'iand' => 2,
'iany' => 2,
'iany_prefix' => 2,
'iany_scatter' => 2,
'iany_suffix' => 2,
'ibclr' => 2,
'ibits' => 2,
'ibset' => 2,
'ichar' => 2,
'ieor' => 2,
'if' => 2,
'ilen' => 2,
'implicit' => 2,
'include' => 2,
'independent' => 2,
'index' => 2,
'inherit' => 2,
'inquire' => 2,
'int' => 2,
'integer' => 2,
'intent' => 2,
'interface' => 2,
'intrinsic' => 2,
'ior' => 2,
'iparity' => 2,
'iparity_prefix' => 2,
'iparity_scatter' => 2,
'iparity_suffix' => 2,
'ishft' => 2,
'ishftc' => 2,
'kind' => 2,
'lbound' => 2,
'le' => 2,
'leadz' => 2,
'len' => 2,
'len_trim' => 2,
'lge' => 2,
'lgt' => 2,
'lle' => 2,
'llt' => 2,
'log' => 2,
'log10' => 2,
'logical' => 2,
'lt' => 2,
'matmul' => 2,
'max' => 2,
'maxexponent' => 2,
'maxloc' => 2,
'maxval' => 2,
'maxval_prefix' => 2,
'maxval_scatter' => 2,
'maxval_suffix' => 2,
'merge' => 2,
'min' => 2,
'minexponent' => 2,
'minloc' => 2,
'minval' => 2,
'minval_prefix' => 2,
'minval_scatter' => 2,
'minval_suffix' => 2,
'mod' => 2,
'module' => 2,
'modulo' => 2,
'mvbits' => 2,
'namelist' => 2,
'ne' => 2,
'nearest' => 2,
'neqv' => 2,
'new' => 2,
'nint' => 2,
'none' => 2,
'not' => 2,
'nullify' => 2,
'number_of_processors' => 2,
'only' => 2,
'onto' => 2,
'open' => 2,
'operator' => 2,
'optional' => 2,
'or' => 2,
'pack' => 2,
'parameter' => 2,
'parity' => 2,
'parity_prefix' => 2,
'parity_scatter' => 2,
'parity_suffix' => 2,
'pause' => 2,
'pointer' => 2,
'popcnt' => 2,
'poppar' => 2,
'precision' => 2,
'present' => 2,
'print' => 2,
'private' => 2,
'procedure' => 2,
'processors' => 2,
'processors_shape' => 2,
'product' => 2,
'product_prefix' => 2,
'product_scatter' => 2,
'product_suffix' => 2,
'program' => 2,
'public' => 2,
'pure' => 2,
'radix' => 2,
'random_number' => 2,
'random_seed' => 2,
'range' => 2,
'read' => 2,
'real' => 2,
'realign' => 2,
'recursive' => 2,
'redistribute' => 2,
'repeat' => 2,
'reshape' => 2,
'result' => 2,
'return' => 2,
'rewind' => 2,
'rrspacing' => 2,
'save' => 2,
'scale' => 2,
'scan' => 2,
'select' => 2,
'selected_int_kind' => 2,
'selected_real_kind' => 2,
'sequence' => 2,
'set_exponent' => 2,
'shape' => 2,
'sign' => 2,
'sin' => 2,
'sinh' => 2,
'size' => 2,
'spacing' => 2,
'spread' => 2,
'sqrt' => 2,
'stop' => 2,
'subroutine' => 2,
'sum' => 2,
'sum_prefix' => 2,
'sum_scatter' => 2,
'sum_suffix' => 2,
'system_clock' => 2,
'tan' => 2,
'tanh' => 2,
'target' => 2,
'template' => 2,
'then' => 2,
'tiny' => 2,
'transfer' => 2,
'transpose' => 2,
'trim' => 2,
'true' => 2,
'type' => 2,
'ubound' => 2,
'unpack' => 2,
'use' => 2,
'verify' => 2,
'where' => 2,
'while' => 2,
'with' => 2,
'write' => 2,
  );
?>